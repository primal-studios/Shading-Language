/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Antlr;

import java.io.BufferedInputStream;
import java.io.InputStream;

import org.antlr.v4.runtime.CharStreams;
import org.antlr.v4.runtime.CommonTokenStream;
import org.antlr.v4.runtime.ParserRuleContext;
import org.antlr.v4.runtime.tree.ErrorNode;
import org.antlr.v4.runtime.tree.ParseTree;
import org.antlr.v4.runtime.tree.ParseTreeListener;
import org.antlr.v4.runtime.tree.TerminalNode;

import Antlr.apexParser.ShaderBlockContext;
import Antlr.apexParser.TranslationUnitContext;

public class App {
	
	static class Shader
	{
		String name;
	}
	
	static class TranslationUnit
	{
		Shader shader;
	}
	
	static class ShaderVisitor extends apexBaseVisitor<Shader>
	{
		@Override
		public Shader visitShaderBlock(ShaderBlockContext ctx)
		{
			Shader shader = new Shader();
			shader.name = ctx.Identifier().getText();
			return shader;
		}
	}
	
	static class TUListener extends apexBaseVisitor<TranslationUnit>
	{

		@Override
		public TranslationUnit visitTranslationUnit(TranslationUnitContext ctx) {
			ShaderVisitor shaderVisitor = new ShaderVisitor();
			Shader shader = shaderVisitor.visitShaderBlock(ctx.shaderBlock());
			TranslationUnit tu = new TranslationUnit();
			tu.shader = shader;
			return tu;
		}

	}
	
	public String getGreeting() {
        return "Hello world.";
    }

    public static void main(String[] args) throws Exception {
        final InputStream is = App.class.getClassLoader().getResourceAsStream("testshader.txt");
        final BufferedInputStream bis = new BufferedInputStream(is);
        byte[] data = bis.readAllBytes();
        bis.close();
        is.close();

        String contents = new String(data, "UTF-8");

        apexLexer lexer = new apexLexer(CharStreams.fromString(contents));
        CommonTokenStream str = new CommonTokenStream(lexer);
        apexParser parser = new apexParser(str);
        
        TUListener listener = new TUListener();
        listener.visit(parser.translationUnit());
    }
}
